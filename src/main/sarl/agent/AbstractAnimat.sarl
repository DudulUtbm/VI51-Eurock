package ^agent

import Behaviour.BehaviourOutput
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import java.util.UUID
import org.arakhne.afc.math.continous.object2d.Vector2f
import vi51.environment.Perceivable
import io.sarl.core.DefaultContextInteractions

agent AbstractAnimat {

	uses PhysicEnvironment, Lifecycle , DefaultContextInteractions

	on Initialize {
		var physicSkill = new StandardPhysicEnvironment(
			occurrence.parameters.get(0) as UUID,
			occurrence.parameters.get(1) as UUID)
		setSkill(PhysicEnvironment, physicSkill)
		//print("Agent Spawn\n")
//		  emit(new agentReady)  
	}
	
	def getMaxLinear(p : Perceivable) : float {
		p.maxLinearSpeed
	}
	
	def getMaxAngular(p : Perceivable) : float {
		p.maxAngularSpeed
	}

	def emitInfluence(output : BehaviourOutput,time : float) {
		if (output !== null) {
				influenceKinematic(output.linear, output.angular,time);
		}
	}
	
	def doNothing {
		influenceKinematic(new Vector2f, 0f)
	}

	on EndOfGame {
		killMe
	}
	
	on KillAgent{
		killMe
	}
}